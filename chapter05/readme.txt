1、工厂方法模式是针对于简单工厂模式中工厂类职责过重的问题，在简单工厂模式中，使用工厂类根据条件生成具体产品对象，
并且扩展困难，一旦需要增加具体产品，就需要修改工厂类，违背了“开放封闭原则”，故而引入工厂方法模式。工厂方法模式
定义一个用于创建对象的接口，让子类决定实例化哪一个类，工厂方法使一个类的实例化延迟到其子类（简单工厂模式中具体
产品实例是在工厂类创建的，而工厂方法模式中具体产品实例是在其对应的具体工厂类中）。
2、工厂方法模式一般包含四大类，分别是Product类、ConcreteProduct类、Creator类和ConcreteCreator类，其中Product类
定义了工厂方法所创建的对象的接口，ConcreteProduct类表示具体的产品类，实现了Product类的接口，Creator类声明工厂
方法，该方法返回一个Product类型的对象，ConcreteCreator类重定义工厂方法以返回一个ConcreteProduct实例。
3、当然，工厂方法模式也存在着其不足的地方，比如我们想要使用哪个具体产品时，就需要在客户端代码中声明使用哪个具体工厂
，也就是说，工厂方法模式把简单工厂模式的内部逻辑判断从工厂类中移到了客户端代码来进行。原来在简单工厂模式中，想要加
功能是修改工厂类，现在在工厂方法模式中变成了修改客户端了。